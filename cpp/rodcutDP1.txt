#include <stdio.h>

int func(int n, int a, int b, int c, int *dp);

int main() {
	int t, N, x, y, z;
	int i, dp[4001];
	
	 scanf ("%d", &t);
	 while (t-- > 0)
	 {
	     scanf("%d", &N);
	     scanf("%d", &x);
	     scanf("%d", &y);
	     scanf("%d", &z);
	   
	     for (i=0; i<=N; i++)
	     {
	         dp[i] = -2;
	     }
	     printf("%d\n", func(N, x, y, z, dp));
	 }
	return 0;
}

int max (int *m)
{
    int i, j = -1;
    for (i = 0; i<3; i++)
    {
        if (m[i] > j)
        {
            j = m[i];
        }
    }
    
    return j;
    
}

int func(int n, int a, int b, int c, int *dp)
{
    int m[3], ret;

    if (n < 0)
    {
        return -1;
    }
    else if (n == 0)
    {
        return 0;
    }
    else if (dp[n] != -2)
    {
        return dp[n];
    }
    
    m[0] = func (n-a, a, b, c, dp);
    m[1] = func (n-b, a, b, c, dp);
    m[2] = func (n-c, a, b, c, dp);


    ret = max (m);
    
    if (ret == -1)
    {
        dp[n] = -1;
        return -1;
    }
    else
    {
        dp[n] = ret+1;
        return dp[n];
    }
    
}